@* 
@using Microsoft.EntityFrameworkCore

@inject blogapp.Data.BlogDBContext db

@{
    var userId = Context.Session.GetInt32("UserId");
    var isCreator = db.BlogPosts.Any(p => p.UserId == userId);
    var notifications = db.UserNotifications
        .Where(un => un.UserId == userId)
        .Include(un => un.Notification)
        .Where(un => un.Notification != null && (!un.Notification.IsForCreators || isCreator))
        .OrderByDescending(un => un.Notification.CreatedAt)
        .Take(5)
        .Select(un => un.Notification)
        .ToList();

    var userName = Context.Session.GetString("UserName");
    var isLoggedIn = !string.IsNullOrEmpty(userName);
    var userInitial = isLoggedIn ? userName.Substring(0, 1).ToUpper() : "";
    
    // Get profile image from session first, then from database as fallback
    var profileImagePath = Context.Session.GetString("ProfileImagePath");
    if (string.IsNullOrEmpty(profileImagePath) && userId.HasValue)
    {
        var user = db.Users.FirstOrDefault(u => u.Id == userId.Value);
        profileImagePath = user?.ProfileImagePath ?? "";
    }
    
    var hasProfileImage = !string.IsNullOrEmpty(profileImagePath);

    // Check if current page is admin page
    var isAdminPage = Context.Request.Path.StartsWithSegments("/Admin");
}

<!DOCTYPE html>
<html lang="en" class="@(isAdminPage ? "admin-page" : "")">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"] - BlogHub</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content="BlogHub - Share your thoughts with the world." />
    <link rel="icon" href="/favicon.ico" type="image/x-icon" />

    <!-- Fonts & Icons -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />

    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

    <!-- Anti-forgery token for AJAX requests -->
    @Html.AntiForgeryToken()

    @RenderSection("Styles", required: false)

    <style>
        :root {
            --primary-color: #3498db;
            --secondary-color: #2e2ecc;
            --text-light: #f8f9fa;
            --text-dark: #343a40;
            --bg-dark: #121212;
            --card-dark: #1e1e1e;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: url('https://img.freepik.com/free-vector/background-wave-minimalist-modern-style_483537-5220.jpg') no-repeat center center fixed;
            background-size: cover;
            color: var(--text-light);
            min-height: 100vh;
            position: relative;
            transition: background-image 0.5s ease-in-out;
        }

        /* Dark mode background */
        html.dark-mode body {
            background-image: url('https://img-s-msn-com.akamaized.net/tenant/amp/entityid/BB1msyO8?w=0&h=0&q=60&m=6&f=jpg&u=t') !important;
        }

        /* Admin page background */
        html.admin-page body {
            background-image: url('https://cdn.wallpapersafari.com/71/81/k7HuF6.jpg') !important;
        }

        /* Dark mode admin page */
        html.dark-mode.admin-page body {
            background-image: url('https://img-s-msn-com.akamaized.net/tenant/amp/entityid/BB1msyO8?w=0&h=0&q=60&m=6&f=jpg&u=t') !important;
        }

        /* Overlay for all backgrounds */
        body::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.6);
            z-index: -1;
            transition: background-color 0.5s ease;
        }

        /* Darker overlay for dark mode */
        html.dark-mode body::before {
            background: rgba(0, 0, 0, 0.7);
        }

        /* Different overlay for admin pages */
        html.admin-page body::before {
            background: rgba(0, 0, 0, 0.5);
        }

        /* Navbar styling - Compact version */
        .navbar {
            background: rgba(0, 0, 0, 0.7) !important;
            backdrop-filter: blur(10px);
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
            padding: 0.4rem 0.8rem; /* Reduced padding */
            min-height: 50px; /* Reduced height */
        }

        .navbar-brand {
            font-weight: 700;
            font-size: 1.2rem; /* Reduced from 1.6rem */
            color: var(--text-light) !important;
            letter-spacing: 0.5px;
            padding: 0.25rem 0;
        }

        .navbar-nav {
            align-items: center;
        }

        .nav-link {
            padding: 0.4rem 0.6rem !important; /* Reduced padding */
            font-size: 0.9rem;
        }

        .dropdown-menu {
            min-width: 180px; /* Reduced width */
            margin-top: 0.25rem;
        }

        .dropdown-item {
            padding: 0.4rem 1rem;
            font-size: 0.9rem;
        }

        .user-avatar, .user-avatar-img {
            width: 30px;
            height: 30px;
            margin-right: 6px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            font-weight: bold;
            font-size: 0.8rem;
            transition: all 0.3s ease;
        }

        .user-avatar:hover, .user-avatar-img:hover {
            transform: scale(1.1);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            border-color: #3498db;
        }

        .user-avatar-img {
            width: 30px !important;
            height: 30px !important;
            object-fit: cover !important;
            border: 2px solid rgba(255, 255, 255, 0.3) !important;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2) !important;
            max-width: 30px !important;
            max-height: 30px !important;
            min-width: 30px !important;
            min-height: 30px !important;
            transition: all 0.3s ease !important;
        }

        .date-display {
            font-size: 0.8rem;
            margin-right: 10px;
        }

        /* Mobile menu adjustments */
        @@media (max-width: 768px) {
            .navbar-collapse

        {
            padding: 8px;
        }

        .nav-link {
            padding: 0.4rem 0 !important;
        }

        .navbar-toggler {
            padding: 0.25rem 0.5rem;
        }

        }

        /* Rest of your styles... */
        .admin-btn {
            position: fixed;
            bottom: 20px;
            left: 20px;
            background: var(--primary-color);
            color: white;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            text-align: center;
            line-height: 50px;
            font-size: 1.2rem;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            z-index: 1000;
            transition: all 0.3s ease;
        }

        footer {
            text-align: center;
            padding: 20px;
            font-size: 0.9rem;
            color: rgba(255, 255, 255, 0.7);
            background: rgba(0, 0, 0, 0.5);
            margin-top: 50px;
            transition: all 0.3s ease;
        }

        main {
            padding-top: 70px; /* Reduced to match smaller navbar */
            padding-bottom: 50px;
        }

        /* Loading spinner and other styles remain the same */
        .bg-loading {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
            opacity: 1;
            transition: opacity 0.5s ease;
        }

            .bg-loading.hidden {
                opacity: 0;
                pointer-events: none;
            }

            .bg-loading .spinner {
                width: 50px;
                height: 50px;
                border: 5px solid rgba(255, 255, 255, 0.3);
                border-radius: 50%;
                border-top-color: var(--primary-color);
                animation: spin 1s ease-in-out infinite;
            }

        @@keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }
    </style>
</head>
<body>
    <!-- Background loading indicator -->
    <div class="bg-loading" id="bgLoading">
        <div class="spinner"></div>
    </div>

    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark fixed-top">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">BlogHub</a>

            <!-- Date Display -->
            <div class="date-display d-none d-lg-flex">
                <i class="far fa-calendar-alt"></i>
                <span id="currentDate"></span>
            </div>

            <button class="navbar-toggler" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarNav">
                <!-- Mobile Date Display -->
                <div class="date-display d-flex d-lg-none mb-3">
                    <i class="far fa-calendar-alt"></i>
                    <span id="currentDateMobile"></span>
                </div>

                <ul class="navbar-nav ms-auto">
                    @if (isLoggedIn)
                    {
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
                                <i class="fas fa-bell"></i>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end">
                                @if (notifications.Any())
                                {
                                    @foreach (var n in notifications)
                                    {
                                        <li class="dropdown-item">
                                            <strong>@n.Title</strong><br />
                                            <small class="text-muted">@n.Message</small>
                                        </li>
                                    }
                                }
                                else
                                {
                                    <li class="dropdown-item text-muted">No notifications</li>
                                }
                            </ul>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
                                @if (hasProfileImage)
                                {
                                    <img src="@profileImagePath" class="user-avatar-img" onclick="window.location.href='/User/Dashboard'; event.stopPropagation();" style="cursor: pointer;" />
                                }
                                else
                                {
                                    <div class="user-avatar" onclick="window.location.href='/User/Dashboard'; event.stopPropagation();" style="cursor: pointer;">@userInitial</div>
                                }
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li><a class="dropdown-item" href="/User/Dashboard"><i class="fas fa-tachometer-alt me-2"></i>Dashboard</a></li>
                                <li><a class="dropdown-item" href="/User/MyPosts"><i class="fas fa-file-alt me-2"></i>My Posts</a></li>
                                <li><a class="dropdown-item" href="/User/Bookmarks"><i class="fas fa-bookmark me-2"></i>Bookmarks</a></li>
                                <li><a class="dropdown-item" href="/User/EditProfile"><i class="fas fa-user-edit me-2"></i>Edit Profile</a></li>
                                <li><hr class="dropdown-divider" /></li>
                                <li><a class="dropdown-item" href="/Auth/Logout"><i class="fas fa-sign-out-alt me-2"></i>Logout</a></li>
                            </ul>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item"><a class="nav-link" href="/Auth/Login"><i class="fas fa-sign-in-alt me-1"></i>Login</a></li>
                        <li class="nav-item"><a class="nav-link" href="/Auth/Register"><i class="fas fa-user-plus me-1"></i>Register</a></li>
                    }
                    <li class="nav-item">
                        <button id="themeToggle" class="btn btn-sm text-light">
                            <i id="themeIcon" class="fas fa-sun"></i>
                        </button>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="container">
        @RenderBody()
    </main>

    <footer>
        &copy; @DateTime.Now.Year - BlogHub | Made with <i class="fas fa-heart text-danger"></i> for creators
    </footer>

    <!-- Admin Shortcut -->
    <a href="/Admin/Login" class="admin-btn" title="Admin Panel">
        <i class="fas fa-cog"></i>
    </a>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/alerts.js"></script>

    <script>
        // Theme toggle functionality
        const toggleBtn = document.getElementById('themeToggle');
        const icon = document.getElementById('themeIcon');
        const html = document.documentElement;
        const bgLoading = document.getElementById('bgLoading');

        // Function to hide loading spinner
        function hideLoadingSpinner() {
            setTimeout(() => {
                bgLoading.classList.add('hidden');
            }, 500);
        }

        // Preload background images
        function preloadBackgrounds() {
            const images = [
                'https://img.freepik.com/free-vector/background-wave-minimalist-modern-style_483537-5220.jpg',
                'https://img-s-msn-com.akamaized.net/tenant/amp/entityid/BB1msyO8?w=0&h=0&q=60&m=6&f=jpg&u=t',
                'https://cdn.wallpapersafari.com/71/81/k7HuF6.jpg'
            ];

            let loadedCount = 0;
            images.forEach(src => {
                const img = new Image();
                img.src = src;
                img.onload = () => {
                    loadedCount++;
                    if (loadedCount === images.length) {
                        hideLoadingSpinner();
                    }
                };
                img.onerror = () => {
                    loadedCount++;
                    if (loadedCount === images.length) {
                        hideLoadingSpinner();
                    }
                };
            });
        }

        window.addEventListener("DOMContentLoaded", () => {
            // Preload all background images
            preloadBackgrounds();

            // Set current date
            const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
            const today = new Date();
            document.getElementById('currentDate').textContent = today.toLocaleDateString('en-US', options);
            document.getElementById('currentDateMobile').textContent = today.toLocaleDateString('en-US', options);

            // Set theme from localStorage
            if (localStorage.getItem("theme") === "dark") {
                html.classList.add("dark-mode");
                icon.classList.replace("fa-sun", "fa-moon");
            }
        });

        toggleBtn.addEventListener("click", () => {
            // Show loading spinner during theme transition
            bgLoading.classList.remove('hidden');

            setTimeout(() => {
                const isDark = !html.classList.contains("dark-mode");

                // Toggle classes
                html.classList.toggle("dark-mode");
                icon.classList.toggle("fa-sun", !isDark);
                icon.classList.toggle("fa-moon", isDark);

                // Save preference
                localStorage.setItem("theme", isDark ? "dark" : "light");

                // Hide spinner after transition completes
                setTimeout(() => {
                    bgLoading.classList.add('hidden');
                }, 500);
            }, 100);
        });
    </script>

    @RenderSection("Scripts", required: false)
</body>
</html> *@









@using Microsoft.EntityFrameworkCore
@inject blogapp.Data.BlogDBContext db

@{
    var userId = Context.Session.GetInt32("UserId");
    var isCreator = db.BlogPosts.Any(p => p.UserId == userId);
    var notifications = db.UserNotifications
        .Where(un => un.UserId == userId)
        .Include(un => un.Notification)
        .Where(un => un.Notification != null && (!un.Notification.IsForCreators || isCreator))
        .OrderByDescending(un => un.Notification.CreatedAt)
        .Take(5)
        .Select(un => un.Notification)
        .ToList();

    var userName = Context.Session.GetString("UserName");
    var isLoggedIn = !string.IsNullOrEmpty(userName);
    var userInitial = isLoggedIn ? userName.Substring(0, 1).ToUpper() : "";
    
    // Get profile image from session first, then from database as fallback
    var profileImagePath = Context.Session.GetString("ProfileImagePath");
    if (string.IsNullOrEmpty(profileImagePath) && userId.HasValue)
    {
        var user = db.Users.FirstOrDefault(u => u.Id == userId.Value);
        profileImagePath = user?.ProfileImagePath ?? "";
    }
    
    var hasProfileImage = !string.IsNullOrEmpty(profileImagePath);

    // Check if current page is admin page
    var isAdminPage = Context.Request.Path.StartsWithSegments("/Admin");
}

<!DOCTYPE html>
<html lang="en" class="@(isAdminPage ? "admin-page" : "")">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"] - BlogHub</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content="BlogHub - Share your thoughts with the world." />
    <link rel="icon" href="/favicon.ico" type="image/x-icon" />

    <!-- Fonts & Icons -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />

    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

    <!-- Anti-forgery token for AJAX requests -->
    @Html.AntiForgeryToken()

    @RenderSection("Styles", required: false)

    <style>
        :root {
            --primary-color: #3498db;
            --secondary-color: #2e2ecc;
            --text-light: #f8f9fa;
            --text-dark: #343a40;
            --bg-dark: #121212;
            --card-dark: #1e1e1e;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: url('https://img.freepik.com/free-vector/background-wave-minimalist-modern-style_483537-5220.jpg') no-repeat center center fixed;
            background-size: cover;
            color: var(--text-light);
            min-height: 100vh;
            position: relative;
            transition: background-image 0.5s ease-in-out;
        }

        /* Dark mode background */
        html.dark-mode body {
            background-image: url('https://img-s-msn-com.akamaized.net/tenant/amp/entityid/BB1msyO8?w=0&h=0&q=60&m=6&f=jpg&u=t') !important;
        }

        /* Admin page background */
        html.admin-page body {
            background-image: url('https://cdn.wallpapersafari.com/71/81/k7HuF6.jpg') !important;
        }

        /* Dark mode admin page */
        html.dark-mode.admin-page body {
            background-image: url('https://img-s-msn-com.akamaized.net/tenant/amp/entityid/BB1msyO8?w=0&h=0&q=60&m=6&f=jpg&u=t') !important;
        }

        /* Overlay for all backgrounds */
        body::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.6);
            z-index: -1;
            transition: background-color 0.5s ease;
        }

        /* Darker overlay for dark mode */
        html.dark-mode body::before {
            background: rgba(0, 0, 0, 0.7);
        }

        /* Different overlay for admin pages */
        html.admin-page body::before {
            background: rgba(0, 0, 0, 0.5);
        }

        /* Navbar styling - Compact version */
        .navbar {
            background: rgba(0, 0, 0, 0.7) !important;
            backdrop-filter: blur(10px);
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
            padding: 0.4rem 0.8rem; /* Reduced padding */
            min-height: 50px; /* Reduced height */
        }

        .navbar-brand {
            font-weight: 700;
            font-size: 1.2rem; /* Reduced from 1.6rem */
            color: var(--text-light) !important;
            letter-spacing: 0.5px;
            padding: 0.25rem 0;
        }

        .navbar-nav {
            align-items: center;
        }

        .nav-link {
            padding: 0.4rem 0.6rem !important; /* Reduced padding */
            font-size: 0.9rem;
        }

        .dropdown-menu {
            min-width: 180px; /* Reduced width */
            margin-top: 0.25rem;
        }

        .dropdown-item {
            padding: 0.4rem 1rem;
            font-size: 0.9rem;
        }

        .user-avatar, .user-avatar-img {
            width: 30px;
            height: 30px;
            margin-right: 6px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            font-weight: bold;
            font-size: 0.8rem;
            transition: all 0.3s ease;
        }

        .user-avatar:hover, .user-avatar-img:hover {
            transform: scale(1.1);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            border-color: #3498db;
        }

        .user-avatar-img {
            width: 30px !important;
            height: 30px !important;
            object-fit: cover !important;
            border: 2px solid rgba(255, 255, 255, 0.3) !important;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2) !important;
            max-width: 30px !important;
            max-height: 30px !important;
            min-width: 30px !important;
            min-height: 30px !important;
            transition: all 0.3s ease !important;
        }

        .date-display {
            font-size: 0.8rem;
            margin-right: 10px;
        }

        /* Mobile menu adjustments */
        @@media (max-width: 768px) {
            .navbar-collapse {
                padding: 8px;
            }

            .nav-link {
                padding: 0.4rem 0 !important;
            }

            .navbar-toggler {
                padding: 0.25rem 0.5rem;
            }
        }

        /* Rest of your styles... */
        .admin-btn {
            position: fixed;
            bottom: 20px;
            left: 20px;
            background: var(--primary-color);
            color: white;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            text-align: center;
            line-height: 50px;
            font-size: 1.2rem;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            z-index: 1000;
            transition: all 0.3s ease;
        }

        footer {
            text-align: center;
            padding: 20px;
            font-size: 0.9rem;
            color: rgba(255, 255, 255, 0.7);
            background: rgba(0, 0, 0, 0.5);
            margin-top: 50px;
            transition: all 0.3s ease;
        }

        main {
            padding-top: 70px; /* Reduced to match smaller navbar */
            padding-bottom: 50px;
        }

        /* Loading spinner and other styles remain the same */
        .bg-loading {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
            opacity: 1;
            transition: opacity 0.5s ease;
        }

            .bg-loading.hidden {
                opacity: 0;
                pointer-events: none;
            }

            .bg-loading .spinner {
                width: 50px;
                height: 50px;
                border: 5px solid rgba(255, 255, 255, 0.3);
                border-radius: 50%;
                border-top-color: var(--primary-color);
                animation: spin 1s ease-in-out infinite;
            }

        @@keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }
    </style>
</head>
<body>
    <!-- Background loading indicator -->
    <div class="bg-loading" id="bgLoading">
        <div class="spinner"></div>
    </div>

    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark fixed-top">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">BlogHub</a>

            <!-- Date Display -->
            <!-- Removed date display from header -->

            <button class="navbar-toggler" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarNav">
                <!-- Removed mobile date display from header -->
                <ul class="navbar-nav ms-auto">
                    @if (isLoggedIn)
                    {
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
                                <i class="fas fa-bell"></i>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end">
                                @if (notifications.Any())
                                {
                                    @foreach (var n in notifications)
                                    {
                                        <li class="dropdown-item">
                                            <strong>@n.Title</strong><br />
                                            <small class="text-muted">@n.Message</small>
                                        </li>
                                    }
                                }
                                else
                                {
                                    <li class="dropdown-item text-muted">No notifications</li>
                                }
                            </ul>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
                                @if (hasProfileImage)
                                {
                                    <img src="@profileImagePath" class="user-avatar-img" onclick="window.location.href='/User/Dashboard'; event.stopPropagation();" style="cursor: pointer;" />
                                }
                                else
                                {
                                    <div class="user-avatar" onclick="window.location.href='/User/Dashboard'; event.stopPropagation();" style="cursor: pointer;">@userInitial</div>
                                }
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li><a class="dropdown-item" href="/User/Dashboard"><i class="fas fa-tachometer-alt me-2"></i>Dashboard</a></li>
                                <li><a class="dropdown-item" href="/User/MyPosts"><i class="fas fa-file-alt me-2"></i>My Posts</a></li>
                                <li><a class="dropdown-item" href="/User/Bookmarks"><i class="fas fa-bookmark me-2"></i>Bookmarks</a></li>
                                <li><a class="dropdown-item" href="/User/EditProfile"><i class="fas fa-user-edit me-2"></i>Edit Profile</a></li>
                                <li><hr class="dropdown-divider" /></li>
                                <li><a class="dropdown-item" href="/Auth/Logout"><i class="fas fa-sign-out-alt me-2"></i>Logout</a></li>
                            </ul>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item"><a class="nav-link" href="/Auth/Login"><i class="fas fa-sign-in-alt me-1"></i>Login</a></li>
                        <li class="nav-item"><a class="nav-link" href="/Auth/Register"><i class="fas fa-user-plus me-1"></i>Register</a></li>
                    }
                    <li class="nav-item">
                        <button id="themeToggle" class="btn btn-sm text-light">
                            <i id="themeIcon" class="fas fa-sun"></i>
                        </button>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="container" style="padding-top: 70px; padding-bottom: 70px;">
        @RenderBody()
    </main>

    <footer style="position: fixed; left: 0; bottom: 0; width: 100%; background: #1a2035; color: #fff; text-align: center; z-index: 1050; padding: 10px 0;">
        &copy; @DateTime.Now.Year - BlogHub | Made with <i class="fas fa-heart text-danger"></i> for creators
    </footer>

    <!-- Admin Shortcut -->
    <a href="/Admin/Login" class="admin-btn" title="Admin Panel">
        <i class="fas fa-cog"></i>
    </a>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Theme toggle functionality
        const toggleBtn = document.getElementById('themeToggle');
        const icon = document.getElementById('themeIcon');
        const html = document.documentElement;
        const bgLoading = document.getElementById('bgLoading');

        // Function to hide loading spinner
        function hideLoadingSpinner() {
            setTimeout(() => {
                bgLoading.classList.add('hidden');
            }, 500);
        }

        // Preload background images
        function preloadBackgrounds() {
            const images = [
                'https://img.freepik.com/free-vector/background-wave-minimalist-modern-style_483537-5220.jpg',
                'https://img-s-msn-com.akamaized.net/tenant/amp/entityid/BB1msyO8?w=0&h=0&q=60&m=6&f=jpg&u=t',
                'https://cdn.wallpapersafari.com/71/81/k7HuF6.jpg'
            ];

            let loadedCount = 0;
            images.forEach(src => {
                const img = new Image();
                img.src = src;
                img.onload = () => {
                    loadedCount++;
                    if (loadedCount === images.length) {
                        hideLoadingSpinner();
                    }
                };
                img.onerror = () => {
                    loadedCount++;
                    if (loadedCount === images.length) {
                        hideLoadingSpinner();
                    }
                };
            });
        }

        window.addEventListener("DOMContentLoaded", () => {
            // Preload all background images
            preloadBackgrounds();

            // Set current date
            const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
            const today = new Date();
            document.getElementById('currentDate').textContent = today.toLocaleDateString('en-US', options);
            document.getElementById('currentDateMobile').textContent = today.toLocaleDateString('en-US', options);

            // Set theme from localStorage
            if (localStorage.getItem("theme") === "dark") {
                html.classList.add("dark-mode");
                icon.classList.replace("fa-sun", "fa-moon");
            }
        });

        toggleBtn.addEventListener("click", () => {
            // Show loading spinner during theme transition
            bgLoading.classList.remove('hidden');

            setTimeout(() => {
                const isDark = !html.classList.contains("dark-mode");

                // Toggle classes
                html.classList.toggle("dark-mode");
                icon.classList.toggle("fa-sun", !isDark);
                icon.classList.toggle("fa-moon", isDark);

                // Save preference
                localStorage.setItem("theme", isDark ? "dark" : "light");

                // Hide spinner after transition completes
                setTimeout(() => {
                    bgLoading.classList.add('hidden');
                }, 500);
            }, 100);
        });
    </script>

    @RenderSection("Scripts", required: false)

 

</body>
</html>